import KeystoneSDK from '../../src'
import { type TronSignature } from '../../src/types/signature'

test('parseSignature', () => {
  const keystoneSDK = new KeystoneSDK()

  const type = 'tron-signature'
  const cborHex = 'a201d825509b1deb4d3b7d4bad9bdd2b0d7b3dcb6d02584147b1f77b3e30cfbbfa41d795dd34475865240617dd1c5a7bad526f5fd89e52cd057c80b665cc2431efab53520e2b1b92a0425033baee915df858ca1c588b0a1800'
  const expectResult: TronSignature = {
    signature: '47b1f77b3e30cfbbfa41d795dd34475865240617dd1c5a7bad526f5fd89e52cd057c80b665cc2431efab53520e2b1b92a0425033baee915df858ca1c588b0a1800',
    requestId: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'
  }

  expect(keystoneSDK.tron.parseSignature(type, cborHex)).toStrictEqual(expectResult)
})

test('generateSignRequest TRC20', () => {
  const keystoneSDK = new KeystoneSDK()

  const requestId = '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'
  const signData = '0a0207902208e1b9de559665c6714080c49789bb2c5aae01081f12a9010a31747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e54726967676572536d617274436f6e747261637412740a1541c79f045e4d48ad8dae00e6a6714dae1e000adfcd1215410d292c98a5eca06c2085fff993996423cf66c93b2244a9059cbb0000000000000000000000009bbce520d984c3b95ad10cb4e32a9294e6338da300000000000000000000000000000000000000000000000000000000000f424070c0b6e087bb2c90018094ebdc03'
  const path = "m/44'/195'/0'/0'"
  const xfp = '12121212'
  const address = ''
  const origin = ''
  const tokenInfo = {
    name: 'TronOne',
    symbol: 'TONE',
    decimals: 18
  }

  const expectResult = {
    type: 'tron-sign-request',
    cbor: 'a301d825509b1deb4d3b7d4bad9bdd2b0d7b3dcb6d0259018d7b22636f6e747261637441646472657373223a225442416f37504e794b6f393459575571314373324c4246786b685470686e41453454222c22666565223a313030303030303030302c2266726f6d223a22545541687877334d674d795239726879724d446e564a626f33626b79314753557248222c226c6174657374426c6f636b223a7b2268617368223a2230303030303030303030303030303030653162396465353539363635633637313030303030303030303030303030303030303030303030303030303030303030222c226e756d626572223a313933362c2274696d657374616d70223a313532373638323434303030307d2c226f76657272696465223a7b22646563696d616c73223a31382c22746f6b656e46756c6c4e616d65223a2254726f6e4f6e65222c22746f6b656e53686f72744e616d65223a22544f4e45227d2c22746f223a2254514167325432764a634841583973624b54456f616f577a7435313279556a694644222c22746f6b656e223a6e756c6c2c2276616c7565223a2231303030303030227d03d90130a20188182cf518c3f500f500f5021a12121212'
  }

  expect(keystoneSDK.tron.generateSignRequest({ requestId, signData, path, xfp, tokenInfo, address, origin })).toStrictEqual(expectResult)
})

test('generateSignRequest TRC10', () => {
  const keystoneSDK = new KeystoneSDK()

  const requestId = '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'
  const signData = '0a022e1e2208543e546a43ad4e5f40f8bbd59df82d5a730802126f0a32747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e5472616e736665724173736574436f6e747261637412390a0731303031303930121541ee6d1ffba872573971562a70f9ad1dc2d4af8c8b1a1541654eb440c1a0640aca337ad9ebf3a122976a91052001'
  const path = "m/44'/195'/0'/0'"
  const xfp = '12121212'
  const address = ''
  const origin = ''
  const tokenInfo = undefined

  const expectResult = {
    type: 'tron-sign-request',
    cbor: 'a301d825509b1deb4d3b7d4bad9bdd2b0d7b3dcb6d025901277b22636f6e747261637441646472657373223a6e756c6c2c22666565223a302c2266726f6d223a22545868745972386e6d6769537033645933635366694b426a6564337a4e3874654853222c226c6174657374426c6f636b223a7b2268617368223a2230303030303030303030303030303030353433653534366134336164346535663030303030303030303030303030303030303030303030303030303030303030222c226e756d626572223a31313830362c2274696d657374616d70223a313537383435393639393030307d2c226f76657272696465223a6e756c6c2c22746f223a22544b43735874664b6648326436614561514363747962444339756141334d536a3268222c22746f6b656e223a2231303031303930222c2276616c7565223a2231227d03d90130a20188182cf518c3f500f500f5021a12121212'
  }

  expect(keystoneSDK.tron.generateSignRequest({ requestId, signData, path, xfp, tokenInfo, address, origin })).toStrictEqual(expectResult)
})

test('generateSignRequest TX', () => {
  const keystoneSDK = new KeystoneSDK()

  const requestId = '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'
  const signData = '0a02665c2208ec27b63954f5913d40d887bdd4f72d5a67080112630a2d747970652e676f6f676c65617069732e636f6d2f70726f746f636f6c2e5472616e73666572436f6e747261637412320a1541c2ac1d2a29ea27b9bbf049370c3505139c7c9d90121541ee6d1ffba872573971562a70f9ad1dc2d4af8c8b1880897a'
  const path = "m/44'/195'/0'/0'"
  const xfp = '12121212'
  const address = ''
  const origin = ''
  const tokenInfo = undefined

  const expectResult = {
    type: 'tron-sign-request',
    cbor: 'a301d825509b1deb4d3b7d4bad9bdd2b0d7b3dcb6d025901297b22636f6e747261637441646472657373223a6e756c6c2c22666565223a302c2266726f6d223a225454695947786237594e6655514a416e4c464d643170766d6f79774d375078694732222c226c6174657374426c6f636b223a7b2268617368223a2230303030303030303030303030303030656332376236333935346635393133643030303030303030303030303030303030303030303030303030303030303030222c226e756d626572223a32363230342c2274696d657374616d70223a313537383330363230373030307d2c226f76657272696465223a6e756c6c2c22746f223a22545868745972386e6d6769537033645933635366694b426a6564337a4e3874654853222c22746f6b656e223a22545258222c2276616c7565223a2232303030303030227d03d90130a20188182cf518c3f500f500f5021a12121212'
  }

  expect(keystoneSDK.tron.generateSignRequest({ requestId, signData, path, xfp, tokenInfo, address, origin })).toStrictEqual(expectResult)
})
